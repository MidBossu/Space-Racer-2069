<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///fuk
audio_stop_all();
if(room != rm_results)
{
instance_create(x,y,obj_start);
letter = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///room starting positions
if(room = rm_track1)
{
start1x = 864;
start2x = 864;
start3x = 864;
start4x = 864;
start1y = 640;
start2y = 704;
start3y = 766;
start4y = 830;
rotate = 0;
}
if(room = rm_track2)
{
start1x = 1952;
start2x = 1952;
start3x = 1952;
start4x = 1952;
start1y = 112;
start2y = 208;
start3y = 304;
start4y = 400;
rotate = 0;
}
if(room = rm_track3)
{
start1x = 560;
start2x = 656;
start3x = 752;
start4x = 848;
start1y = 1760;
start2y = 1760;
start3y = 1760;
start4y = 1760;
rotate = 90;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Track sections
if(room = rm_track1)
{
sections[0] = 13;
sections[1] = section1;
sections[2] = section2;
sections[3] = section3;
sections[4] = section4;
sections[5] = section5;
sections[6] = section6;
sections[7] = section7;
sections[8] = section8;
sections[9] = section9;
sections[10] = section10;
sections[11] = section11;
sections[12] = section12;
sections[13] = section13;
sections[14] = section14;
}
if(room = rm_track2)
{
sections[0] = 14;
sections[1] = section1t2;
sections[2] = section2t2;
sections[3] = section3t2;
sections[4] = section4t2;
sections[5] = section5t2;
sections[6] = section6t2;
sections[7] = section7t2;
sections[8] = section8t2;
sections[9] = section9t2;
sections[10] = section10t2;
sections[11] = section11t2;
}
if(room = rm_track3)
{
sections[0] = 10;
sections[1] = section1t3;
sections[2] = section2t3;
sections[3] = section3t3;
sections[4] = section4t3;
sections[5] = section5t3;
sections[6] = section6t3;
sections[7] = section7t3;
sections[8] = section8t3;
sections[9] = section9t3;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///cars
cars[0] = 4;
cars[1] = obj_car1;
cars[2] = obj_car2;
cars[3] = obj_car3;
cars[4] = obj_car4;

cars2[0] = 5;
cars2[1] = obj_car1;
cars2[2] = obj_car2;
cars2[3] = obj_car3;
cars2[4] = obj_car4;
cars2[5] = obj_cpu;

cars3[0] = 7;
cars3[1] = obj_car1;
cars3[2] = obj_car2;
cars3[3] = obj_car3;
cars3[4] = obj_car4;
cars3[5] = obj_cpu2;
cars3[6] = obj_cpu2;

cars4[0] = 8;
cars4[1] = obj_car1;
cars4[2] = obj_car2;
cars4[3] = obj_car3;
cars4[4] = obj_car4;
cars4[5] = obj_cpu3;
cars4[6] = obj_cpu3;
cars4[7] = obj_cpu3;
if(room != rm_results)
{
///Position calculator
global.position = ds_grid_create(2,4);

var p1 = cars[global.choice];
var p2 = cars2[global.choice2];
var p3 = cars3[global.choice3];
var p4 = cars4[global.choice4];

//Player1
var car1 = instance_create(start1x,start1y,cars[global.choice]);
with(car1)
{
tag = 1;
self.image_angle = obj_raceController.rotate;
}
 ds_grid_add(global.position,0,0,"a");
 ds_grid_add(global.position,1,0,cars[global.choice].pos_section);
//Player2
var car2 = instance_create(start2x,start2y,cars2[global.choice2]);
with(car2)
{
tag = 2;
self.image_angle = obj_raceController.rotate;
}
ds_grid_add(global.position,0,1,"b");
ds_grid_add(global.position,1,1,cars2[global.choice2].pos_section);
//Player3
var car3 = instance_create(start3x,start3y,cars3[global.choice3]);
with(car3)
{
tag = 3;
self.image_angle = obj_raceController.rotate;
}
ds_grid_add(global.position,0,2,"c");
ds_grid_add(global.position,1,2,cars3[global.choice3].pos_section);


var car4 = instance_create(start4x,start4y,cars4[global.choice4]);
with(car4)
{
tag = 4;
self.image_angle = obj_raceController.rotate;
}
ds_grid_add(global.position,0,3,"d");
ds_grid_add(global.position,1,3,cars4[global.choice4].pos_section);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>-1</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>room</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>rm_results</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
///pos calculator





car1pos = cars[global.choice].pos_section;
car2pos = cars2[global.choice2].pos_section;
car3pos = cars3[global.choice3].pos_section;
car4pos = cars4[global.choice4].pos_section;

ds_grid_set(global.position,1,0,car1pos);
ds_grid_set(global.position,1,1,car2pos);
ds_grid_set(global.position,1,2,car3pos);
ds_grid_set(global.position,1,3,car4pos);
ds_grid_sort(global.position,1,false);


/*car1T = ds_grid_value_y(global.position,0,0,0,2,"a");
ds_grid_set(global.position,1,car1T,car1pos);

car2T = ds_grid_value_y(global.position,0,0,0,2,"b");
ds_grid_set(global.position,1,car2T,car2pos);

car3T = ds_grid_value_y(global.position,0,0,0,2,"c");
ds_grid_set(global.position,1,car3T,car3pos);

car4T = ds_grid_value_y(global.position,0,0,0,2,"d");
ds_grid_set(global.position,1,car4T,car4pos);*/



///position
cars[global.choice].pos = ds_grid_value_y(global.position,0,0,1,3,car1pos)+1;
cars2[global.choice2].pos = ds_grid_value_y(global.position,0,0,1,3,car2pos)+1;
cars3[global.choice3].pos = ds_grid_value_y(global.position,0,0,1,3,car3pos)+1;
cars4[global.choice4].pos = ds_grid_value_y(global.position,0,0,1,3,car4pos)+1;






</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(cars[global.choice].laps &gt; global.laps)
{
global.firstplace = global.choice;
room_goto(rm_results);
}
else if(cars2[global.choice2].laps &gt; global.laps)
{
global.firstplace = global.choice2;
room_goto(rm_results);
}
else if(cars3[global.choice3].laps &gt; global.laps)
{
global.firstplace = global.choice3;
room_goto(rm_results);
}
else if(cars4[global.choice4].laps &gt; global.laps)
{
global.firstplace = global.choice4;
room_goto(rm_results);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>view_object[0] = cars[global.choice];
view_object[1] = cars2[global.choice2];
view_object[2] = cars3[global.choice3];
view_object[3] = cars4[global.choice4];
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>-1</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>room</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>rm_results</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player4 draw
draw_set_color(c_white);


draw_set_halign(fa_right);
if(global.players &lt; 4)
{
draw_text(1198,668,round(cars4[global.choice4].path_speed*100));
}
else
{
draw_text(1198,668,round(cars4[global.choice4].speed*100));
}
draw_set_halign(fa_left);
draw_text(690,395,"Lap: " + string(cars4[global.choice4].laps)+"/"+string(global.laps));
if(cars4[global.choice4].pos = 1)
{
draw_text(690,460, "1st");
}
else if (cars4[global.choice4].pos = 2)
{
draw_text(690,460, "2nd");
}
else if (cars4[global.choice4].pos = 3)
{
draw_text(690,460, "3rd");
}
else if (cars4[global.choice4].pos = 4)
{
draw_text(690,460, "4th");
}
else
{
draw_text(690,460,cars4[global.choice4].pos);
}

//draw_text(690, 240, "section: " + string(cars4[global.choice4].pos_section));

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player1 draw
draw_set_color(c_white);

draw_set_halign(fa_right);
draw_text(558,308,round(cars[global.choice].speed*100));
draw_set_halign(fa_left);
draw_text(50,35,"Lap: " + string(cars[global.choice].laps)+"/"+string(global.laps));
if(cars[global.choice].pos = 1)
{
draw_text(50,100, "1st");
}
else if (cars[global.choice].pos = 2)
{
draw_text(50,100, "2nd");
}
else if (cars[global.choice].pos = 3)
{
draw_text(50,100, "3rd");
}
else if (cars[global.choice].pos = 4)
{
draw_text(50,100, "4th");
}
else
{
draw_text(50,100,cars[global.choice].pos);
}

//draw_text(50, 240, "section: " + string(cars[global.choice].pos_section));
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player3 draw
draw_set_color(c_white);

draw_set_halign(fa_right);
if(global.players &lt; 3)
{
draw_text(558,668,round(cars3[global.choice3].path_speed*100));
}
else
{
draw_text(558,668,round(cars3[global.choice3].speed*100));
}
draw_set_halign(fa_left);
draw_text(50,395,"Lap: " + string(cars3[global.choice3].laps)+"/"+string(global.laps));
if(cars3[global.choice3].pos = 1)
{
draw_text(50,460, "1st");
}
else if (cars3[global.choice3].pos = 2)
{
draw_text(50,460, "2nd");
}
else if (cars3[global.choice3].pos = 3)
{
draw_text(50,460, "3rd");
}
else if (cars3[global.choice3].pos = 4)
{
draw_text(50,460, "4th");
}
else
{
draw_text(50,460,cars3[global.choice3].pos);
}

//draw_text(50, 240, "section: " + string(cars3[global.choice3].pos_section));
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> ///Player2 draw
draw_set_color(c_white);

draw_set_halign(fa_right);
if(global.players &lt; 2)
{
draw_text(1198,308,round(cars2[global.choice2].path_speed*100));
}
else
{
draw_text(1198,308,round(cars2[global.choice2].speed*100));
}
draw_set_halign(fa_left);
draw_text(690,35,"Lap: " + string(cars2[global.choice2].laps)+"/"+string(global.laps));
if(cars2[global.choice2].pos = 1)
{
draw_text(690,100, "1st");
}
else if (cars2[global.choice2].pos = 2)
{
draw_text(690,100, "2nd");
}
else if (cars2[global.choice2].pos = 3)
{
draw_text(690,100, "3rd");
}
else if (cars2[global.choice2].pos = 4)
{
draw_text(690,100, "4th");
}
else
{
draw_text(690,100,cars2[global.choice2].pos);
}

//draw_text(690, 240, "section: " + string(cars2[global.choice2].pos_section));
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>332</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
